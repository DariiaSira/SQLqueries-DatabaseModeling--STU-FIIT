
-- ---- Table Artifacts ----

CREATE TABLE "Artifacts" (
  "artifact_id" INT PRIMARY KEY UNIQUE NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "name" varchar(255) UNIQUE NOT NULL,
  "description" text,
  "control_id" int,
  "artifact_status" varchar(100) NOT NULL
);

ALTER TABLE "Artifacts"
    ADD FOREIGN KEY ("control_id") REFERENCES "Control" ("control_id"),
    -- to check to ensure that artifact status only accepts certain values.
    ADD CONSTRAINT CHK_ArtifactStatus
        CHECK (artifact_status IN ('in_transit', 'on_display', 'in_storage'));

-- ---- Table Rental ----

CREATE TABLE "Rental" (
  "rental_id" INT PRIMARY KEY UNIQUE NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "artifact_id" int NOT NULL,
  "owner_id" int NOT NULL,
  "rental_status" varchar(100) NOT NULL,
  "rental_date" TIMESTAMP WITH TIME ZONE,
  "return_date" TIMESTAMP WITH TIME ZONE
);

ALTER TABLE "Rental"
    ADD FOREIGN KEY ("artifact_id") REFERENCES "Artifacts" ("artifact_id"),
    ADD FOREIGN KEY ("owner_id") REFERENCES "Owners" ("owner_id"),
    -- to check to ensure that artifact status only accepts certain values.
    ADD CONSTRAINT CHK_RentalStatus
        CHECK (rental_status IN ('borrowed', 'lent', 'owned')),
    -- to check that dates are in ISO8601 format with the time zone UTC.
    ADD CONSTRAINT CHK_RentalDateFormat
        CHECK ((rental_date IS NULL OR rental_date = rental_date::timestamp AT TIME ZONE 'UTC'
            AND return_date IS NULL OR return_date = return_date::timestamp AT TIME ZONE 'UTC'));

-- ---- Table Owners ----

CREATE TABLE "Owners" (
  "owner_id" INT PRIMARY KEY UNIQUE NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "name" varchar(255) UNIQUE NOT NULL,
  "contact_phone" varchar(20),
  "contact_email" varchar(100),
  "address" text
);

-- ---- Table Displayed_Artifacts ----

CREATE TABLE "Displayed_Artifacts" (
  "exhibition_id" int NOT NULL,
  "artifact_id" int NOT NULL,
  "room_id" int NOT NULL
);

ALTER TABLE "Displayed_Artifacts"
    ADD FOREIGN KEY ("exhibition_id") REFERENCES "Exhibitions" ("exhibition_id"),
    ADD FOREIGN KEY ("artifact_id") REFERENCES "Artifacts" ("artifact_id"),
    ADD FOREIGN KEY ("room_id") REFERENCES "Rooms" ("room_id");

-- ---- Table Exhibitions ----

CREATE TABLE "Exhibitions" (
  "exhibition_id" INT PRIMARY KEY UNIQUE NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "name" varchar(255) UNIQUE NOT NULL,
  "description" text,
  "exhibition_status" varchar(100),
  "start_date" TIMESTAMP WITH TIME ZONE NOT NULL,
  "end_date" TIMESTAMP WITH TIME ZONE NOT NULL
);

ALTER TABLE "Exhibitions"
    -- to check to ensure that artifact status only accepts certain values.
    ADD CONSTRAINT CHK_ExhibitionsStatus
        CHECK (exhibition_status IN ('preparation', 'active', 'passed')),
    -- to check that dates are in ISO8601 format with the time zone UTC.
    ADD CONSTRAINT CHK_ExhibitionsDateFormat
        CHECK ((start_date IS NOT NULL OR start_date = start_date::timestamp AT TIME ZONE 'UTC'
            AND end_date IS NOT NULL OR end_date = end_date::timestamp AT TIME ZONE 'UTC'));

-- ---- Table Rooms ----

CREATE TABLE "Rooms" (
  "room_id" INT PRIMARY KEY UNIQUE NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "name" varchar(100) UNIQUE NOT NULL,
  "description" text
);

-- ---- Table Categories ----

CREATE TABLE "Categories" (
  "category_id" INT PRIMARY KEY UNIQUE NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "name" varchar(100) UNIQUE NOT NULL,
  "description" text
);

-- ---- Table ArtifactCategories ----

CREATE TABLE "ArtifactCategories" (
  "artifact_id" int NOT NULL,
  "category_id" int NOT NULL
);

ALTER TABLE "ArtifactCategories"
    ADD FOREIGN KEY ("artifact_id") REFERENCES "Artifacts" ("artifact_id"),
    ADD FOREIGN KEY ("category_id") REFERENCES "Categories" ("category_id");

-- ---- Table Control ----

CREATE TABLE "Control" (
  "control_id" INT PRIMARY KEY UNIQUE NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "control_date" TIMESTAMP WITH TIME ZONE NOT NULL,
  "checked" boolean NOT NULL DEFAULT false,
  "description" text,
  "shipping_date" TIMESTAMP WITH TIME ZONE NOT NULL,
  "delivery_date" TIMESTAMP WITH TIME ZONE NOT NULL
);

ALTER TABLE "Control"
    -- to check that dates are in ISO8601 format with the time zone UTC.
    ADD CONSTRAINT CHK_ControlDateFormat
        CHECK ((control_date IS NOT NULL OR control_date = control_date::timestamp AT TIME ZONE 'UTC'
            AND shipping_date IS NOT NULL OR shipping_date = shipping_date::timestamp AT TIME ZONE 'UTC'
            AND delivery_date IS NOT NULL OR delivery_date = delivery_date::timestamp AT TIME ZONE 'UTC')),
    -- to check control date is withing date of shipping and delivering.
    ADD CONSTRAINT CHK_ControlDateWithinShippingAndDelivery
        CHECK (control_date >= shipping_date AND control_date <= delivery_date);
